{"version":3,"file":"VRow-DZ_OIz1I.js","sources":["../../node_modules/vuetify/lib/components/VGrid/VCol.mjs","../../node_modules/vuetify/lib/components/VGrid/VRow.mjs"],"sourcesContent":["// Styles\nimport \"./VGrid.css\";\n\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { breakpoints } from \"../../composables/display.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\nimport { capitalize, computed, h } from 'vue';\nimport { genericComponent, propsFactory } from \"../../util/index.mjs\"; // Types\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false\n    };\n    return props;\n  }, {});\n})();\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    const offsetKey = 'offset' + capitalize(val);\n    props[offsetKey] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    const orderKey = 'order' + capitalize(val);\n    props[orderKey] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps)\n};\nfunction breakpointClass(type, prop, val) {\n  let className = type;\n  if (val == null || val === false) {\n    return undefined;\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '');\n    className += `-${breakpoint}`;\n  }\n  if (type === 'col') {\n    className = 'v-' + className;\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .v-col-md\n    return className.toLowerCase();\n  }\n  // .order-md-6\n  className += `-${val}`;\n  return className.toLowerCase();\n}\nconst ALIGN_SELF_VALUES = ['auto', 'start', 'end', 'center', 'baseline', 'stretch'];\nexport const makeVColProps = propsFactory({\n  cols: {\n    type: [Boolean, String, Number],\n    default: false\n  },\n  ...breakpointProps,\n  offset: {\n    type: [String, Number],\n    default: null\n  },\n  ...offsetProps,\n  order: {\n    type: [String, Number],\n    default: null\n  },\n  ...orderProps,\n  alignSelf: {\n    type: String,\n    default: null,\n    validator: str => ALIGN_SELF_VALUES.includes(str)\n  },\n  ...makeComponentProps(),\n  ...makeTagProps()\n}, 'VCol');\nexport const VCol = genericComponent()({\n  name: 'VCol',\n  props: makeVColProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const classes = computed(() => {\n      const classList = [];\n\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type;\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value = props[prop];\n          const className = breakpointClass(type, prop, value);\n          if (className) classList.push(className);\n        });\n      }\n      const hasColClasses = classList.some(className => className.startsWith('v-col-'));\n      classList.push({\n        // Default to .v-col if no other col-{bp}-* classes generated nor `cols` specified.\n        'v-col': !hasColClasses || !props.cols,\n        [`v-col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf\n      });\n      return classList;\n    });\n    return () => h(props.tag, {\n      class: [classes.value, props.class],\n      style: props.style\n    }, slots.default?.());\n  }\n});\n//# sourceMappingURL=VCol.mjs.map","// Styles\nimport \"./VGrid.css\";\n\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { breakpoints } from \"../../composables/display.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\nimport { capitalize, computed, h } from 'vue';\nimport { genericComponent, propsFactory } from \"../../util/index.mjs\"; // Types\nconst ALIGNMENT = ['start', 'end', 'center'];\nconst SPACE = ['space-between', 'space-around', 'space-evenly'];\nfunction makeRowProps(prefix, def) {\n  return breakpoints.reduce((props, val) => {\n    const prefixKey = prefix + capitalize(val);\n    props[prefixKey] = def();\n    return props;\n  }, {});\n}\nconst ALIGN_VALUES = [...ALIGNMENT, 'baseline', 'stretch'];\nconst alignValidator = str => ALIGN_VALUES.includes(str);\nconst alignProps = makeRowProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator\n}));\nconst JUSTIFY_VALUES = [...ALIGNMENT, ...SPACE];\nconst justifyValidator = str => JUSTIFY_VALUES.includes(str);\nconst justifyProps = makeRowProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator\n}));\nconst ALIGN_CONTENT_VALUES = [...ALIGNMENT, ...SPACE, 'stretch'];\nconst alignContentValidator = str => ALIGN_CONTENT_VALUES.includes(str);\nconst alignContentProps = makeRowProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator\n}));\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps)\n};\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content'\n};\nfunction breakpointClass(type, prop, val) {\n  let className = classMap[type];\n  if (val == null) {\n    return undefined;\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '');\n    className += `-${breakpoint}`;\n  }\n  // .align-items-sm-center\n  className += `-${val}`;\n  return className.toLowerCase();\n}\nexport const makeVRowProps = propsFactory({\n  dense: Boolean,\n  noGutters: Boolean,\n  align: {\n    type: String,\n    default: null,\n    validator: alignValidator\n  },\n  ...alignProps,\n  justify: {\n    type: String,\n    default: null,\n    validator: justifyValidator\n  },\n  ...justifyProps,\n  alignContent: {\n    type: String,\n    default: null,\n    validator: alignContentValidator\n  },\n  ...alignContentProps,\n  ...makeComponentProps(),\n  ...makeTagProps()\n}, 'VRow');\nexport const VRow = genericComponent()({\n  name: 'VRow',\n  props: makeVRowProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const classes = computed(() => {\n      const classList = [];\n\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type;\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value = props[prop];\n          const className = breakpointClass(type, prop, value);\n          if (className) classList.push(className);\n        });\n      }\n      classList.push({\n        'v-row--no-gutters': props.noGutters,\n        'v-row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent\n      });\n      return classList;\n    });\n    return () => h(props.tag, {\n      class: ['v-row', classes.value, props.class],\n      style: props.style\n    }, slots.default?.());\n  }\n});\n//# sourceMappingURL=VRow.mjs.map"],"names":["propMap","breakpointClass"],"mappings":"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","x_google_ignoreList":[0,1]}